{"version":3,"sources":["components/PaginationForm/PaginartionForm.tsx","components/Pagination/Pagination.tsx","components/ContentWindow/ContentWindow.tsx","App.tsx","utils.ts","index.tsx"],"names":["PaginationForm","itemsPerPage","onSettingsChage","className","id","value","onChange","htmlFor","Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pages","Array","from","length","_","i","isFirstPage","isLastPage","prevPage","nexPage","classNames","disabled","href","onClick","map","page","active","ContentWindow","items","item","to","numbers","n","push","getNumbers","App","useState","setItemsPerPage","setCurrentPage","start","end","visibleItems","slice","event","target","ReactDOM","render","document","getElementById"],"mappings":"oMAOaA,EAAkC,SAAC,GAGzC,IAFLC,EAEI,EAFJA,aACAC,EACI,EADJA,gBAEA,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRC,GAAG,kBACHD,UAAU,eACVE,MAAOJ,EACPK,SAAUJ,EALZ,UAOE,wBAAQG,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOE,QAAQ,kBAAkBJ,UAAU,qBAA3C,gC,gBClBOK,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAQC,MAAMC,KAAK,CAAEC,OAAQN,IAAiB,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAC5DC,EAA8B,IAAhBX,EACdY,EAAaZ,IAAgBE,EAC7BW,EAAWb,EAAc,EACzBc,EAAUd,EAAc,EAE9B,OACE,qBAAIR,UAAU,aAAd,UACE,oBAAIA,UAAWuB,IAAW,YAAa,CACrCC,SAAUL,IADZ,SAIE,mBACE,UAAQ,WACRnB,UAAU,YACVyB,KAAK,QACL,gBAAeN,EACfO,QAAS,WACPjB,EAAaY,IANjB,oBAaDR,EAAMc,KAAI,SAAAC,GAAI,OACb,oBACE5B,UAAWuB,IAAW,YAAa,CACjCM,OAAQrB,IAAgBoB,IAF5B,SAME,mBACE,UAAQ,WACR5B,UAAU,YACVyB,KAAI,WAAMG,GACV,gBAAepB,IAAgBoB,EAC/BF,QAAS,WACPjB,EAAamB,IANjB,SASGA,KAXEA,MAgBT,oBAAI5B,UAAWuB,IAAW,YAAa,CACrCC,SAAUJ,IADZ,SAIE,mBACE,UAAQ,WACRpB,UAAU,YACVyB,KAAK,QACL,gBAAeL,EACfM,QAAS,WACPjB,EAAaa,IANjB,wBCjEKQ,EAA+C,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC7D,OACE,6BACGA,EAAMJ,KAAI,SAAAK,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SCC1BD,ECPC,SAAoBhB,EAAckB,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIpB,EAAMoB,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDAKG,CAAW,EAAG,IACzBV,KAAI,SAAAQ,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOzC,EAAP,KAAqB0C,EAArB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO/B,EAAP,KAAoBiC,EAApB,KAEMnC,EAAQyB,EAAMf,OACd0B,GAAUlC,EAAc,GAAKV,EAC7B6C,EAAMnC,EAAcV,EAAeQ,EACrCA,EACAE,EAAcV,EACZ8C,EAAeb,EAAMc,MAAMH,EAAOC,GAWxC,OACE,sBAAK3C,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWQ,EADX,mBACiCkC,EAAQ,EADzC,cACgDC,EADhD,eAC0DrC,EAD1D,OAIA,cAAC,EAAD,CACER,aAAcA,EACdC,gBAnBiB,SAAC+C,GACtBN,GAAiBM,EAAMC,OAAO7C,OAC9BuC,EAAe,MAoBb,cAAC,EAAD,CACEnC,MAAOA,EACPC,QAAST,EACTU,YAAaA,EACbC,aArBa,SAACmB,GAClBa,EAAeb,MAuBb,cAAC,EAAD,CAAeG,MAAOa,QE/C5BI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.31e48c67.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  itemsPerPage: number,\n  onSettingsChage: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nexport const PaginationForm: React.FC<Props> = ({\n  itemsPerPage,\n  onSettingsChage,\n}) => {\n  return (\n    <div className=\"form-group row\">\n      <div className=\"col-3 col-sm-2 col-xl-1\">\n        <select\n          data-cy=\"perPageSelector\"\n          id=\"perPageSelector\"\n          className=\"form-control\"\n          value={itemsPerPage}\n          onChange={onSettingsChage}\n        >\n          <option value=\"3\">3</option>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n        </select>\n      </div>\n\n      <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n        items per page\n      </label>\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pages = Array.from({ length: numberOfPages }, (_, i) => i + 1);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === numberOfPages;\n  const prevPage = currentPage - 1;\n  const nexPage = currentPage + 1;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: isFirstPage,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => {\n            onPageChange(prevPage);\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={classNames('page-item', {\n            active: currentPage === page,\n          })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            aria-disabled={currentPage === page}\n            onClick={() => {\n              onPageChange(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames('page-item', {\n        disabled: isLastPage,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={() => {\n            onPageChange(nexPage);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React from 'react';\n\nexport const ContentWindow: React.FC<{ items: string[] }> = ({ items }) => {\n  return (\n    <ul>\n      {items.map(item => (\n        <li data-cy=\"item\" key={item}>{item}</li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { PaginationForm } from './components/PaginationForm/PaginartionForm';\nimport { Pagination } from './components/Pagination';\nimport { ContentWindow } from './components/ContentWindow/ContentWindow';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const total = items.length;\n  const start = ((currentPage - 1) * itemsPerPage);\n  const end = currentPage * itemsPerPage > total\n    ? total\n    : currentPage * itemsPerPage;\n  const visibleItems = items.slice(start, end);\n\n  const changeSettings = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const changePage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${start + 1} - ${end} of ${total})`}\n      </p>\n\n      <PaginationForm\n        itemsPerPage={itemsPerPage}\n        onSettingsChage={changeSettings}\n      />\n\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={changePage}\n      />\n\n      <ContentWindow items={visibleItems} />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}